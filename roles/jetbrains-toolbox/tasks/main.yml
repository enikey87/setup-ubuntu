---
- name: Set JetBrains Toolbox download URL
  set_fact:
    jbt_url: "{{ jbt_url | default('https://download-cdn.jetbrains.com/toolbox/jetbrains-toolbox-2.7.0.48109.tar.gz') }}"
    jbt_tar: "{{ ansible_env.HOME }}/jetbrains-toolbox.tar.gz"
    jbt_extract_dir: "{{ ansible_env.HOME }}/jetbrains-toolbox"
    jbt_symlink: "{{ ansible_env.HOME }}/.local/bin/jbt"

- name: Check if jbt command exists
  ansible.builtin.command: which jbt
  register: jbt_check
  ignore_errors: yes
  changed_when: false

- name: Ensure user's local bin directory exists
  become: no
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.local/bin"
    state: directory
    mode: '0755'
  when: jbt_check.rc != 0

- name: Add ~/.local/bin to PATH in .bashrc
  become: no
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    line: 'export PATH="$HOME/.local/bin:$PATH"'
    state: present
  when: jbt_check.rc != 0

- name: Create JetBrains Toolbox directory in user home
  become: no
  ansible.builtin.file:
    path: "{{ jbt_extract_dir }}"
    state: directory
    mode: '0755'
  when: jbt_check.rc != 0

- name: Download JetBrains Toolbox
  become: no
  ansible.builtin.get_url:
    url: "{{ jbt_url }}"
    dest: "{{ jbt_tar }}"
    mode: '0644'
  when: jbt_check.rc != 0

- name: Extract JetBrains Toolbox
  become: no
  ansible.builtin.unarchive:
    src: "{{ jbt_tar }}"
    dest: "{{ jbt_extract_dir }}"
    remote_src: yes
  when: jbt_check.rc != 0

- name: Remove downloaded tar.gz file
  become: no
  ansible.builtin.file:
    path: "{{ jbt_tar }}"
    state: absent
  when: jbt_check.rc != 0

- name: Find JetBrains Toolbox binary
  become: no
  ansible.builtin.find:
    paths: "{{ jbt_extract_dir }}"
    patterns: 'jetbrains-toolbox'
    file_type: file
    recurse: true
  register: jbt_found
  when: jbt_check.rc != 0

- name: Create jbt symlink in user's local bin
  become: no
  ansible.builtin.file:
    src: "{{ jbt_found.files[0].path }}"
    dest: "{{ jbt_symlink }}"
    state: link
    force: yes
  when: jbt_check.rc != 0 and jbt_found.files|length > 0
